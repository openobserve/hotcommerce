plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
}

// plugins {
//     id 'org.springframework.boot' version '2.5.4'
//     id 'io.spring.dependency-management' version '1.0.11.RELEASE'
//     id 'java'
// }

group = 'ai.openobserve'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootBuildImage {
    imageName = providers.environmentVariable('CODEBUILD_BUILD_NUMBER')
        .forUseAtConfigurationTime()
        .map { buildNumber -> 
            if (buildNumber.isPresent()) {
                return "public.ecr.aws/zinclabs/sample-product-service-java:${buildNumber.get()}"
            } else {
                return "public.ecr.aws/zinclabs/sample-product-service-java:latest"
            }
        }
        .get()
}


tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}
